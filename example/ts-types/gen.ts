/* eslint-disable */
// prettier-disable
// prettier-ignore
// Code generated by api2. DO NOT EDIT.
import {route} from "./utils"

export const api = {
example: {
	IEchoService: {
			Hello: route<example.HelloRequest, example.HelloResponse>(
				"POST", "/hello",
				{"query":["key"]},
				{"header":["session"]}),
			Echo: route<example.EchoRequest, example.EchoResponse>(
				"POST", "/echo/:user",
				{"header":["session"],"json":["text","bar","code","dir","items","maps"]},
				{"json":["text","old","old2","color"]}),
			Since: route<example.SinceRequest, example.SinceResponse>(
				"POST", "/since",
				{"header":["session"]},
				{}),
			Stream: route<example.StreamRequest, example.StreamResponse>(
				"PUT", "/stream",
				{"header":["session"]},
				{}),
			Redirect: route<example.RedirectRequest, example.RedirectResponse>(
				"GET", "/redirect",
				{"query":["id"]},
				{"header":["Location"]}),
			Raw: route<example.RawRequest, example.RawResponse>(
				"POST", "/raw",
				{},
				{}),
	},
},
}
export const example_OpCodeEnum = {
    "Op_Add": "add",
    "Op_Read": "read",
    "Op_Write": "write",
} as const
export const example_DirectionEnum = {
    "North": 0,
    "South": 2,
} as const
export const example_ColorEnum = {
    "ColorBlue": "color_blue",
    "ColorRed": "color_red",
} as const

export declare namespace example {

export type HelloRequest = {
	key?: string
}


export type HelloResponse = {
	session?: string
}


export type EchoRequest = {
	session?: string
	text: string
	bar: number
	code: example.OpCode
	dir: example.Direction
	items: Array<example.CustomType2> | null
	maps: Record<string, example.Direction> |  null
}


export type OpCode = typeof example_OpCodeEnum[keyof typeof example_OpCodeEnum]

export type Direction = typeof example_DirectionEnum[keyof typeof example_DirectionEnum]

export type CustomType2 =  example.UserSettings & {
}


export type UserSettings = Record<string, any> |  null
// EchoResponse.
export type EchoResponse = {
	text: string // field comment.
	/** @deprecated ! Use field Text. */
	old: string
	/** @deprecated The field is DEPRECATED! */
	old2: string
	color: example.Color
}


export type Color = typeof example_ColorEnum[keyof typeof example_ColorEnum]

export type SinceRequest = {
	session?: string
}


export type SinceResponse = {
}


export type StreamRequest = {
	session?: string
}


export type StreamResponse = {
}


export type RedirectRequest = {
	id?: string
}


export type RedirectResponse = {
	Location?: string
}


export type RawRequest = {
}


export type RawResponse = {
}


export type CustomType =  example.UserSettings & {
}

}
